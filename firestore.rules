rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /teams/{teamId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      // Allow any authenticated user to update (e.g., join/leave)
      allow update: if request.auth != null;
      // Only allow the creator to delete
      allow delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
    }
    match /tournaments/{tournamentId} {
      allow create: if request.auth != null;
      allow read: if true; // Allow anyone to read tournament details
      // Allow update if user is creator OR if user is a member of the associated team
      allow update: if request.auth != null &&
                       (request.auth.uid == resource.data.creatorId ||
                        get(/databases/$(database)/documents/teams/$(resource.data.teamId)).data.members.hasAny([request.auth.uid]));
      // Only allow the creator to delete
      allow delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
    }
    match /users/{userId} {
      // Allow authenticated users to read user profiles (needed for displaying names)
      allow read: if request.auth != null;
      // Allow users to create/update their own profile
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }
  }
}
