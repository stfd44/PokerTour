rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Development Rules: Generally allow authenticated users, keep delete restrictions.

    match /teams/{teamId} {
      // Allow authenticated users to create, read, and update teams
      allow create, read, update: if request.auth != null;
      // Only allow the creator to delete (same as prod)
      allow delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
    }

    match /tournaments/{tournamentId} {
      // Allow authenticated users to create and read tournaments
      allow create, read: if request.auth != null;
      // Allow authenticated users to update tournaments (more permissive than prod)
      allow update: if request.auth != null;
      // Only allow the creator to delete (same as prod)
      allow delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
    }

    match /users/{userId} {
      // Allow authenticated users to read user profiles (same as prod)
      allow read: if request.auth != null;
      // Allow users to create/update their own profile (same as prod)
      // Or allow any authenticated user to update any profile (more permissive for dev testing)
      // Let's choose the more permissive option for easier dev testing:
      allow create, update: if request.auth != null;
      // If you prefer stricter user profile updates even in dev, change the above line back to:
      // allow create, update: if request.auth != null && request.auth.uid == userId;
    }

    // Add rules for any other collections if they exist

  }
}
